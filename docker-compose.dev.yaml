name: "my-app"

services:

  web:
    container_name: my-app-web-dev
    build: ./web
    command: sh -c "npm run prisma:migrate:deploy && npm run prisma:generate && npm run dev"
    ports:
      - 3000:3000
    env_file: .env.dev
    networks:
      - my-app-dev-network
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./web/src:/app/src
      - ./web/public:/app/public
      - ./web/prisma:/app/prisma
    environment:
      - WDS_SOCKET_HOST=127.0.0.1
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true

  database:
    container_name: my-app-database-dev
    image: postgres:16
    env_file: .env.dev
    restart: always
    ports:
      - 5432:5432
    networks:
      - my-app-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - ./data/database:/var/lib/postgresql/data

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8082:8080
    networks:
      - my-app-dev-network
    environment:
      ADMINER_DESIGN: pappu687
    depends_on:
      database:
        condition: service_healthy

networks:
  my-app-dev-network:
    driver: bridge