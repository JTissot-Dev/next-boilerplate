name: "my-app-test"

services:

  web:
    container_name: my-app-web-test-dev
    build: ./web
    command: sh -c "npm run prisma:migrate:deploy && npm run prisma:generate && npm run dev"
    expose:
      - 3000
    environnement:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
      BETTER_AUTH_URL: ${{ secrets.BETTER_AUTH_URL }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      FACEBOOK_CLIENT_ID: ${{ secrets.FACEBOOK_CLIENT_ID }}
      FACEBOOK_CLIENT_SECRET: ${{ secrets.FACEBOOK_CLIENT_SECRET }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      PLAYWRITE_BASE_URL: ${{ secrets.PLAYWRITE_BASE_URL }}
    networks:
      - my-app-test-network
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./web/src:/app/src
    healthcheck:
      test: 'curl --fail http://localhost:3000 || exit 1'
      interval: 2s
      timeout: 5s
      retries: 3
      start_period: 5s

  web-test-e2e:
    container_name: my-app-web-test-e2e-exec
    build:
      context: ./web
      dockerfile: Dockerfile.e2e
    environnement:
      PLAYWRITE_BASE_URL: ${{ secrets.PLAYWRITE_BASE_URL }}
    networks:
      - my-app-test-network
    depends_on:
      database:
        condition: service_healthy
      web:
        condition: service_healthy

  database:
    container_name: my-app-database-test
    image: postgres:16
    environment:
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    restart: always
    ports:
      - 5432:5432
    networks:
      - my-app-test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 20

networks:
  my-app-test-network:
    driver: bridge